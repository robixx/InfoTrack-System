@{
    ViewBag.pTitle = "Branch Mapping";
    ViewBag.pageTitle = "InfoTrack";
    ViewBag.Title = "Data Mapping";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}
 @section styles {
    <!-- jquery.vectormap css -->
    <link href="~/libs/select2/css/select2.min.css" rel="stylesheet" type="text/css">
    <link href="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css" rel="stylesheet" type="text/css" />
    <link href="~/libs/bootstrap-datepicker/css/bootstrap-datepicker.min.css" rel="stylesheet">
    <link href="~/libs/spectrum-colorpicker2/spectrum.min.css" rel="stylesheet" type="text/css">
    <link href="~/libs/bootstrap-touchspin/jquery.bootstrap-touchspin.min.css" rel="stylesheet">
    <!-- DataTables -->
    <link href="~/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/libs/datatables.net-buttons-bs4/css/buttons.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <link href="~/libs/datatables.net-select-bs4/css/select.bootstrap4.min.css" rel="stylesheet" type="text/css" />
    <!-- Responsive datatable examples -->
    <link href="~/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />

} 
<link href="~/css/calender.css" rel="stylesheet" />

<style>
    .card {
        margin-bottom: 0.4rem;
    }

    .card-header {
        background-color: white !important;
    }

    .bg-color {
        background-color: #5664d2;
    }

        .bg-color:hover {
            background-color: #5664d2;
            color: white;
        }


    .table-custom {
        border-collapse: separate;
        border-spacing: 0 0.70rem;
    }

        .table-custom th, .table-custom td {
            padding: 0.6rem;
            vertical-align: middle;
            border-top: none;
        }

        .table-custom thead tr {
            background: #f5f5f5;
        }

        .table-custom tbody tr {
            background-color: white;
            border-radius: 0.5rem;
            transition: box-shadow 0.3s ease;
        }

            .table-custom tbody tr:hover {
                 box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); 

               
            }

            .table-custom tbody tr:first-child {
                margin-top: 0;
            }

        .table-custom tbody td {
            border-bottom: 1px solid #c9d3dd;
        }

        .table-custom tbody tr:last-child td {
            border-bottom: none;
        }

    .pagination .page-link {
        border-radius: 0.5rem;
        margin: 0 0.25rem;
    }

    .pagination .page-item.active .page-link {
        background-color: #0d6efd;
        border-color: #0d6efd;
    }
    
</style>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Branch Mapping</h5>
               
            </div>
            <div class="card-body">
                <div id="noticeMessage" class="alert alert-dismissible fade d-none" role="alert">
                    <span id="noticeText"></span>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>                

                <div class="mb-3">
                    <label for="metaelementTitle" class="form-label">Division<span class="text-danger">*</span></label>
                    @Html.DropDownList("divisionId", ViewBag.division as SelectList, "Select Division", new { @class = "form-select w-100", @id = "divisionId", onchange = "getData()" })
                    <div id="modalData"></div>
                </div>
                <div class="row">
                    <div class="" id="buttonshow" style="display:none;">
                        <a class="btn btn-primary btn-sm" id="btnUpdate">Update</a>

                    </div>
                    
                </div>
                <div class="row">
                    <div class="table-responsive" id="showTable" style="display:none;">
                        <table class="table table-custom align-middle" id="projectTable">
                            <thead>
                                <tr class="custom-bg">
                                    <th scope="col"><input type="checkbox" id="allcheck" /> All Select</th>
                                    <th scope="col">Type Name</th>
                                    <th scope="col">
                                        Source Name
                                        <br />
                                        <input type="text" id="sourceFilter" class="form-control form-control-sm" placeholder="Search..." />
                                    </th>
                                    <th>Area</th>
                                    <th scope="col">Mapping</th>

                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
               
               
            </div>
        </div>
        <!-- end row -->
    </div>
</div>

<!-- Confirm Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="confirmMessage">
                <!-- Message will be inserted dynamically -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" id="cancelBtn" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmBtn">Yes</button>
            </div>
        </div>
    </div>
</div>


 @section scripts {
    
    <!-- Required datatable js -->
    <script src="~/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
    <!-- Buttons examples -->
    <script src="~/libs/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/libs/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
    
    <script src="~/libs/select2/js/select2.min.js"></script>
    <script src="~/libs/bootstrap-datepicker/js/bootstrap-datepicker.min.js"></script>
    <script src="~/libs/spectrum-colorpicker2/spectrum.min.js"></script>
    <script src="~/libs/bootstrap-touchspin/jquery.bootstrap-touchspin.min.js"></script>
    <script src="~/libs/admin-resources/bootstrap-filestyle/bootstrap-filestyle.min.js"></script>
    <script src="~/libs/bootstrap-maxlength/bootstrap-maxlength.min.js"></script>

    <script src="~/js/pages/form-advanced.init.js"></script>
    <script src="~/js/app.js"></script>
   
    <script src="~/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>
    <!-- Datatable init js -->
    <script src="~/js/pages/datatables.init.js"></script>


} 

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>

    $(document).ready(function () {
        $('#divisionId').select2({
            width: '100%',
            placeholder: "Select Division"
        });

        $("#sourceFilter").on("keyup", function () {
            let value = $(this).val().toLowerCase();

            $("#projectTable tbody tr").filter(function () {
                $(this).toggle(
                    $(this).find("td[data-label='sourceName']").text().toLowerCase().indexOf(value) > -1
                );
            });
        });

    });
    
    function getdataLoad(typeId){

         $.ajax({
                 url: '/Security/DataMapping/getallDataElementData',
                 type: 'GET',
                 data: {id:typeId},
                 success: function (res) {
                   
                     if(res.data.length>0){
                         TableDesign(res.data);
                     }
                 },
                   error: function (err) {
                    alert('Error while saving.');
                 }
         });
    } 





    function getData(){
        $('#showTable').removeAttr('style');
        $('#buttonshow').removeAttr('style');
        const id=$('#divisionId').val();
        getdataLoad(id);

    }

    function TableDesign(data) {

        const id=$('#divisionId').val();

        const tableBody = document.querySelector('#projectTable tbody');
        tableBody.innerHTML = ""; // clear old rows

        data.forEach(item => {
            const row = document.createElement('tr');

            // Badge and progress color logic
           

            row.innerHTML = `
                <td><input type="checkbox" data-id="${item.id}" data-typeid="${item.typeId}" data-divisionid="${item.divisionId}" data-sourceid="${item.sourceId}" class="row-check" ${item.isActive ? 'checked' : ''}  ${(item.divisionId == 0 || item.divisionId == id) ? '' : 'disabled'} /></td>
                <td data-label="typeName">${item.typeName}</td>
                <td data-label="sourceName">${item.sourceName}</td>
                <td data-label="sourceName">${item.elementName}</td>
                <td data-label="Progress">
                 <span class="badge bg-primary">${item.divisionName}</span>
                </td>
                
              
            `;
            tableBody.appendChild(row);
        });
    }

    // ✅ Checkbox logic
    $(document).on('change', '#allcheck', function () {
        $('.row-check').prop('checked', this.checked);
    });

    $(document).on('change', '.row-check', function () {
        $('#allcheck').prop(
            'checked',
            $('.row-check:checked').length === $('.row-check').length
        );
    });


        // Handle update button click
    $('#btnUpdate').on('click', function() {
        const divisionId = $('#divisionId').val();
        const selected = $('.row-check:checked'); // only checked rows

        const formData = new FormData();
        formData.append('DivisionId', divisionId);

        selected.each(function(index) {
            formData.append(`SelectedItems[${index}].Id`, $(this).data('id'));
            formData.append(`SelectedItems[${index}].TypeId`, $(this).data('typeid'));
            formData.append(`SelectedItems[${index}].SourceId`, $(this).data('sourceid'));
            
        });
       
        fetch('/Security/DataMapping/SaveDataMapping', {
            method: 'POST',
            body: formData
        })
        .then(res => res.json())
        .then(data => {
            if(data.status){
                showNotice(data.message, 'success');


            } else {
                alert('Save failed!');
            }
        })
        .catch(err => console.error(err));
    });






     let currentCheckbox = null;
    let currentState = false;

    $(document).on('change', '.row-check', function () {
        const divisionid = $(this).data('divisionid');
        const isChecked = $(this).is(':checked');
        
        if (divisionid !== 0) {
            currentCheckbox = $(this);  // keep reference
            currentState = isChecked;

            let confirmMsg = isChecked
                ? "Are you sure you want to activate this item?"
                : "Are you sure you want to deactivate this item?";

            $("#confirmMessage").text(confirmMsg);
            $("#confirmModal").modal('show'); // show modal
        }
        else {
            // divisionId == 0 → do nothing, just allow change
        }
    });

    // Handle modal buttons
    $("#confirmBtn").on('click', function () {
        // User confirmed -> keep checkbox as is
        $("#confirmModal").modal('hide');
    });

    $("#cancelBtn").on('click', function () {
        // User cancelled -> revert checkbox
        if (currentCheckbox) {
            currentCheckbox.prop('checked', !currentState);
        }
    });


    function showNotice(message, type = "success") {
        // type can be: success, danger, warning, info
        const notice = $("#noticeMessage");
        const noticeText = $("#noticeText");

        // Reset classes and set new type
        notice.removeClass("d-none alert-success alert-danger alert-warning alert-info")
              .addClass(`alert-${type} show`);

        // Set text
        noticeText.text(message);

        // Auto-hide after 3 seconds
        setTimeout(() => {
            notice.removeClass("show").addClass("d-none");
            location.reload(); // reloads the page
        }, 3000);
    }
  
</script>