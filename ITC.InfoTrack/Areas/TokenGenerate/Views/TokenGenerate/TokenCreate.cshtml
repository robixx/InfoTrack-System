@{
    ViewBag.Title = "TokenCreate";
    ViewBag.pTitle = "Token Create";
    ViewBag.pageTitle = "InfoTrack";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles {
    <!-- jquery.vectormap css -->

    <link href="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css" rel="stylesheet" type="text/css" />

    <!-- DataTables -->
    <link href="~/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />

    <!-- Responsive datatable examples -->
    <link href="~/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />

}
<link href="~/css/tokencustom.css" rel="stylesheet" />
<style>
    .card {
        margin-bottom: 0.4rem;
    }

    .card-header {
        background-color: white !important;
    }

    .bg-color {
        background-color: #5664d2;
    }

        .bg-color:hover {
            background-color: #5664d2;
            color: white;
        }

    .select2-container .select2-selection--single {
        height: 35px !important;
    }

</style>


<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-header">
                <h5>Token Create</h5>
            </div>
            <div class="card-body">
                <div id="error"></div>
                <div class="mt-4">
                    <div class="row g-3">
                        <div class="col-12 col-md-2">
                            <label for="metaelementTitle" class="form-label">Date Time<span class="text-danger">*</span></label>
                            <input type="date" class="form-control" name="datevalue" id="datevalue" />

                        </div>
                        <div class="col-12 col-md-2">
                            <label for="metaelementTitle" class="form-label">Type<span class="text-danger">*</span></label>
                            @Html.DropDownList("typeId", ViewBag.type as SelectList, "Select Type", new { @class = "form-select", @id = "typeId", onchange = "TypeWiseSource()" })

                        </div>
                        <div class="col-12 col-md-2">
                            <label for="districtSelect" class="form-label">District<span class="text-danger">*</span></label>
                            @Html.DropDownList("districtId", ViewBag.district as SelectList, "Select District", new { @class = "form-select", @id = "districtId" })
                        </div>
                        <div class="col-12 col-md-2">
                            <label for="metaelementTitle" class="form-label">Division<span class="text-danger">*</span></label>
                            @Html.DropDownList("divisionId", ViewBag.division as SelectList, "Select Division", new { @class = "form-select w-100", @id = "divisionId" })

                        </div>


                        <div class="col-12 col-md-3">
                            <label for="metaelementTitle" class="form-label" id="typelevel">Type Name<span class="text-danger">*</span></label>
                            <select class="form-select w-100" name="typename" id="typename" onchange="LoadData()">
                                <option value="0">Select Type Name</option>
                            </select>

                        </div>
                    </div>
                </div>
                <div class="mt-4">
                    <div class="row">
                        <div class="col-xl-12">
                            <div id="tableWrapper" class="table-responsive mt-4" style="display:none;">
                                <div class="table-responsive mt-4">
                                    <table id="datatable" class="table">
                                        <thead class="fw-bolt" style="background-color:#f0f2f5;">
                                            <tr>
                                                <th width="150">Category</th>
                                                <th width="200">Posibility</th>
                                                <th id="imageupload"></th>
                                                <th width="500"></th>
                                            </tr>
                                        </thead>
                                        <tbody id="dataTableBody">
                                        </tbody>
                                    </table>
                                </div>
                                <button type="button" id="submit" class="btn btn-primary btn-sm" style="display:none;">Save Data</button>
                            </div>
                        </div>
                       
                    </div>
                </div>
            </div>
        </div>
        <!-- end row -->
    </div>
</div>




@section scripts {
    <!-- apexcharts -->
    <script src="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="~/libs/admin-resources/jquery.vectormap/maps/jquery-jvectormap-us-merc-en.js"></script>
    <!-- Required datatable js -->
    <script src="~/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
    <!-- Responsive examples -->
    <script src="~/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>
    <!-- App js -->
    <script src="~/js/app.js"></script>

}
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/libs/select2/js/select2.min.js"></script>


<script>
      $('#typename').select2({
            placeholder: "Select Type Name",
            allowClear: true
        });


    function TypeWiseSource()
    {
        let typeId=$('#typeId').val();
        let typeText = $('#typeId option:selected').text();
        const typeNameLevel= document.getElementById('typelevel');
       $('#typelevel').html(`${typeText} Name <span class="text-danger">*</span>`);

       $.ajax({
               url: '/TokenGenerate/TokenGenerate/TypeWiseElementName',
               type: 'GET',
               data: {typeId:typeId},
               success: function (res) {
                    if(res.status){
                         const dropdown = $('#typename');
                         dropdown.empty();
                         dropdown.append('<option value="0">Select Type Name </option>');
                         res.data.forEach(item => {
                            // const selected = item.value == selectedGroupId ? 'selected' : '';
                             dropdown.append(`<option value="${item.id}">${item.name}</option>`);
                         });
                    }else{
                         const dropdown = $('#typename');
                         dropdown.empty();
                         dropdown.append('<option value="0"> Select Type Name </option>');
                     }

                 },
                 error: function (err) {
                  alert('Error while saving.');
               }
         });
    }


    function LoadData()
    {
        let typeName= $('#typename').val();
        const error = document.getElementById('error');
        const button = document.getElementById('submit');
        const tableWrapper = document.getElementById('tableWrapper');
        //const error = document.getElementById('categorywisebranding');
        let innerHTML='';
        debugger;
        if(typeName==='0'){
            error.innerHTML =`
             <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <strong>Error! </strong> Please Valid Type Name..
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            document.getElementById('typename').focus();
             tableWrapper.style.display = 'none';
             button.style.display = 'none';
            return;
        }
        tableWrapper.style.removeProperty("display");
        button.style.removeProperty("display");

        $.ajax({
               url: '/TokenGenerate/TokenGenerate/TypeWiseTokenData',
               type: 'GET',
               success: function (res) {
                    if(res.status)
                    {

                        loadTable(res.data);
                    }

                 },
                 error: function (err) {
                  alert('Error while saving.');
               }
        });
    }


    function loadTable(dataList) {
        const tbody = document.getElementById("dataTableBody");
        tbody.innerHTML = ""; // clear old rows first

        dataList.forEach(item => {
            const rowHtml = `
                <tr>
                    <td width="150">${item.title}</br> <span class="text-muted badge" style="font-size:10px; background-color:#dff1ef;">${item.categoryName}</span></td>
                    <td width="200">
                        <select class="form-select form-select-sm" id="yesNoSelect${item.id}">
                            <option value="no">No</option>
                            <option value="yes">Yes</option>
                        </select>
                    </td>
                    <td id="imageUploadCell${item.id}">
                        <div style="display: none;">
                            <input class="form-control form-control-sm fileup" type="file" id="imageUpload${item.id}" multiple>
                            <div id="imagePreview${item.id}" class="d-flex flex-wrap gap-2 mt-2"></div>
                        </div>
                    </td>
                    <td id="commentsCell${item.id}" width="500">
                        <div style="display: none;">
                            <textarea class="form-control form-control-sm" placeholder="Please write a comment" id="comments${item.id}" rows="2"></textarea>
                        </div>
                    </td>
                </tr>
            `;
            tbody.innerHTML += rowHtml;
        });

        // After rendering rows, attach event listeners
        dataList.forEach(item => {
            const select = document.getElementById("yesNoSelect" + item.id);
            const uploadDiv = document.querySelector("#imageUploadCell" + item.id + " div");
            const commentsDiv = document.querySelector("#commentsCell" + item.id + " div");

            select.addEventListener("change", function () {
                if (this.value === "yes") {
                    uploadDiv.style.display = "block";
                    commentsDiv.style.display = "block";
                } else {
                    uploadDiv.style.display = "none";
                    commentsDiv.style.display = "none";
                }
            });


            // Image preview for this row
            const fileInput = document.getElementById("imageUpload" + item.id);
            const previewDiv = document.getElementById("imagePreview" + item.id);

            fileInput.addEventListener("change", function () {
                previewDiv.innerHTML = ""; // clear previous images
                const files = Array.from(this.files);
                files.forEach(file => {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = document.createElement("img");
                        img.src = e.target.result;
                        img.style.width = "40px";
                        img.style.height = "40px";
                        img.style.objectFit = "cover";
                        img.style.borderRadius = "50%";
                        img.className = "border me-2 mb-2";
                        previewDiv.appendChild(img);
                    }
                    reader.readAsDataURL(file);
                });
            });

         });
    }


</script>