@model List<ITC.InfoTrack.Model.ViewModel.GetVisitLogScheduleDto>
@{
    ViewBag.Title = "Approval";
    ViewBag.pTitle = "Visit Log Approval";
    ViewBag.pageTitle = "InfoTrack";
    Layout = "~/Views/Shared/_Layout.cshtml";
   
}

@section styles {
    <!-- jquery.vectormap css -->

    <link href="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css" rel="stylesheet" type="text/css" />

    <!-- DataTables -->
    <link href="~/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />

    <!-- Responsive datatable examples -->
    <link href="~/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />

}

<style>
    .division-section {
        background-color: #fff;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        margin-bottom: 2rem;
    }

    .division-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .division-title {
        font-weight: 600;
        color: #495057;
        margin: 0;
    }

    .gallery-item, .view-more-tile {
        position: relative;
        overflow: hidden;
        border-radius: 1rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
        height: 250px;
        background-color: #fff;
    }

        .gallery-item:hover, .view-more-tile:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .gallery-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
            border-radius: 1rem;
            transition: transform 0.3s ease;
        }

        .gallery-item:hover img {
            transform: scale(1.05);
        }

    /* The overlay is now always visible on the thumbnails */
    .image-info-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to top, rgba(0,0,0,0.8), rgba(0,0,0,0.2));
        color: #fff;
        padding: 1.5rem 1rem 0.75rem 1rem;
        opacity: 1; /* Always visible */
    }

        .image-info-overlay p {
            margin: 0;
            font-size: 0.875rem;
            font-weight: 500;
        }

    .view-more-tile {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #ebe3e4;
        border: 2px dashed #efb2c4;
        color: #6c757d;
        font-size: 2.5rem;
    }

    .back-button {
        border-radius: 50px;
        padding: 0.5rem 1.5rem;
        font-weight: 500;
    }

    /* Modal for the slider */
    #imageSliderModal .modal-content {
        background-color: transparent;
        border: none;
    }

    #imageSliderModal .modal-body {
        padding: 0;
    }

    #imageSliderModal .carousel-item img {
        max-width: 100%;
        height: auto;
        max-height: 90vh;
        display: block;
        margin: auto;
        border-radius: 1rem;
    }

    #imageSliderModal .carousel-caption {
        background-color: rgba(0, 0, 0, 0.6);
        border-radius: 1rem;
        padding: 1rem;
        bottom: 1rem;
        left: 50%;
        transform: translateX(-50%);
        width: 90%;
        max-width: 500px;
    }

    .carousel-control-prev, .carousel-control-next {
        width: 5%;
    }

</style>


<div class="row">
    <h3 class="text-center fw-bold mb-3">Our Image Gallery</h3>
    <p class="text-center text-muted mb-4">Browse through our collection of images by division.</p>

    <!-- Search bar -->
    <div class="input-group mb-5">
        <span class="input-group-text"><i class="bi bi-search"></i></span>
        <input type="text" id="searchInput" class="form-control" placeholder="Search for a division or branch name...">
    </div>

    <div id="galleryContainer">
        <!-- Division sections will be dynamically inserted here -->
    </div>
</div>


<!-- Image Slider Modal -->
<div class="modal fade" id="imageSliderModal" tabindex="-1" aria-labelledby="imageSliderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body p-0">
                <div id="imageCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        <!-- Carousel items will be inserted here -->
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#imageCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#imageCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts {
    <!-- apexcharts -->
    <script src="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="~/libs/admin-resources/jquery.vectormap/maps/jquery-jvectormap-us-merc-en.js"></script>
    <!-- Required datatable js -->
    <script src="~/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
    <!-- Buttons examples -->
    <script src="~/libs/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/libs/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
    <script src="~/libs/jszip/jszip.min.js"></script>
    <script src="~/libs/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/libs/pdfmake/build/vfs_fonts.js"></script>
    <script src="~/libs/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/libs/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="~/libs/datatables.net-buttons/js/buttons.colVis.min.js"></script>
    <script src="~/libs/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
    <script src="~/libs/datatables.net-select/js/dataTables.select.min.js"></script>
    <!-- Responsive examples -->
    <script src="~/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>
    <!-- Datatable init js -->
    <script src="~/js/pages/datatables.init.js"></script>
    <script src="~/js/app.js"></script>

}
<script src="~/lib/jquery/dist/jquery.min.js"></script>


<script>
    document.addEventListener('DOMContentLoaded', () => {
            const galleryContainer = document.getElementById('galleryContainer');
            const searchInput = document.getElementById('searchInput');
            const imageCarouselInner = document.querySelector('#imageCarousel .carousel-inner');
            const allDivisions = [];
            const divisionsData = {};

            // Helper function to generate a random date in the last year
            const getRandomDate = () => {
                const now = new Date();
                const daysAgo = Math.floor(Math.random() * 365);
                const randomDate = new Date(now.setDate(now.getDate() - daysAgo));
                return randomDate.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
            };

            const branches = ['Engineering', 'Marketing', 'Sales', 'Human Resources', 'Operations', 'Finance'];

            // Generate mock data for 20 divisions
            for (let i = 1; i <= 20; i++) {
                const divisionName = `Division ${i}`;
                allDivisions.push(divisionName);
                divisionsData[divisionName] = [];
                const numImages = Math.floor(Math.random() * 5) + 3; // 3-7 images per division
                for (let j = 0; j < numImages; j++) {
                    const imageId = Math.floor(Math.random() * 1000) + 1;
                    const randomBranch = branches[Math.floor(Math.random() * branches.length)];
                    divisionsData[divisionName].push({
                        src: `https://picsum.photos/seed/${imageId}${i}${j}/600/400`,
                        alt: `Image for ${divisionName}`,
                        branch: randomBranch,
                        uploadDate: getRandomDate(),
                    });
                }
            }

            // Function to render a single division section, now accepts images to display
            const renderDivisionSection = (divisionName, imagesToDisplay, isExpanded = false) => {
                const sectionId = `section-${divisionName.replace(/\s/g, '-')}`;
                const divisionSection = document.createElement('div');
                divisionSection.className = 'division-section';
                divisionSection.id = sectionId;
                divisionSection.setAttribute('data-division', divisionName);
                divisionSection.setAttribute('data-expanded', isExpanded ? 'true' : 'false');

                const showBackButton = isExpanded;
                const showMoreButton = !isExpanded && imagesToDisplay.length > 3;

                divisionSection.innerHTML = `
                    <div class="division-header">
                        <h3 class="division-title">${divisionName}</h3>
                        <button class="btn btn-primary back-button ${showBackButton ? '' : 'd-none'}" data-action="collapse">Back to Preview</button>
                    </div>
                    <div class="row g-4 division-grid"></div>
                `;

                const galleryGrid = divisionSection.querySelector('.division-grid');
                const imagesToRender = isExpanded ? imagesToDisplay : imagesToDisplay.slice(0, 3);

                if (imagesToRender.length === 0) {
                    galleryGrid.innerHTML = '<p class="text-center text-muted col-12">No images found for this category.</p>';
                } else {
                    imagesToRender.forEach(image => {
                        const col = document.createElement('div');
                        col.className = 'col-12 col-md-4 col-lg-3';
                        col.innerHTML = `
                            <div class="gallery-item">
                                <img src="${image.src}" alt="${image.alt}">
                                <div class="image-info-overlay">
                                    <p>Branch: ${image.branch}</p>
                                    <p>Last Uploaded: ${image.uploadDate}</p>
                                </div>
                            </div>
                        `;
                        galleryGrid.appendChild(col);
                    });
                }

                if (showMoreButton) {
                    const col = document.createElement('div');
                    col.className = 'col-12 col-md-4 col-lg-3';
                    col.innerHTML = `
                        <div class="view-more-tile" data-action="expand">
                            <i class="bi bi-plus-circle-fill"></i>
                        </div>
                    `;
                    galleryGrid.appendChild(col);
                }
                return divisionSection;
            };

            const renderCarousel = (images, startIndex) => {
                imageCarouselInner.innerHTML = '';
                images.forEach((image, index) => {
                    const carouselItem = document.createElement('div');
                    carouselItem.className = `carousel-item ${index === startIndex ? 'active' : ''}`;
                    carouselItem.innerHTML = `
                        <img src="${image.src}" class="d-block w-100" alt="${image.alt}">
                        <!-- Caption is now visible on all devices -->
                        <div class="carousel-caption">
                            <h5 class="fw-bold text-white-50">${image.branch}</h5>
                            <p class="text-white-50">Last Uploaded: ${image.uploadDate}</p>
                        </div>
                    `;
                    imageCarouselInner.appendChild(carouselItem);
                });
            };

            const filterAndRenderGalleries = (query) => {
                galleryContainer.innerHTML = '';
                const lowerCaseQuery = query.toLowerCase();
                let resultsFound = false;

                allDivisions.forEach(divisionName => {
                    const divisionImages = divisionsData[divisionName];
                    const lowerCaseDivisionName = divisionName.toLowerCase();

                    let imagesToRender = [];
                    if (lowerCaseDivisionName.includes(lowerCaseQuery)) {
                        // If the division name matches, show all images in that division
                        imagesToRender = divisionImages;
                    } else {
                        // Otherwise, filter images by branch name
                        imagesToRender = divisionImages.filter(img => img.branch.toLowerCase().includes(lowerCaseQuery));
                    }

                    if (imagesToRender.length > 0) {
                        // Render the division with the filtered/all images
                        galleryContainer.appendChild(renderDivisionSection(divisionName, imagesToRender));
                        resultsFound = true;
                    }
                });

                if (!resultsFound) {
                    galleryContainer.innerHTML = `
                        <div class="text-center text-muted p-5">
                            <i class="bi bi-x-circle-fill" style="font-size: 3rem;"></i>
                            <p class="mt-3 fs-5">No results found for "${query}".</p>
                        </div>
                    `;
                }
            };

            const renderInitialGallery = () => {
                galleryContainer.innerHTML = '';
                allDivisions.forEach(divisionName => {
                    const images = divisionsData[divisionName];
                    galleryContainer.appendChild(renderDivisionSection(divisionName, images));
                });
            };

            // Event listener for search input
            searchInput.addEventListener('input', (e) => {
                const query = e.target.value.trim();
                if (query.length > 0) {
                    filterAndRenderGalleries(query);
                } else {
                    renderInitialGallery();
                }
            });

            galleryContainer.addEventListener('click', (e) => {
                const divisionSection = e.target.closest('.division-section');
                if (!divisionSection) return;

                const divisionName = divisionSection.getAttribute('data-division');
                const images = divisionsData[divisionName];

                if (e.target.closest('[data-action="expand"]')) {
                    const newSection = renderDivisionSection(divisionName, images, true);
                    divisionSection.replaceWith(newSection);
                } else if (e.target.closest('[data-action="collapse"]')) {
                    const newSection = renderDivisionSection(divisionName, images);
                    divisionSection.replaceWith(newSection);
                } else {
                    const galleryItem = e.target.closest('.gallery-item');
                    if (galleryItem) {
                        const imgElement = galleryItem.querySelector('img');
                        const clickedIndex = images.findIndex(img => img.src === imgElement.src);

                        if (clickedIndex !== -1) {
                            renderCarousel(images, clickedIndex);
                            const imageSliderModal = new bootstrap.Modal(document.getElementById('imageSliderModal'));
                            imageSliderModal.show();
                        }
                    }
                }
            });

            // Initial render of the gallery
            renderInitialGallery();
        });
</script>