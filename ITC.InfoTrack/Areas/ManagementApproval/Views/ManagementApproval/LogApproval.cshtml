@model List<ITC.InfoTrack.Model.ViewModel.GetVisitLogScheduleDto>
@{
    ViewBag.Title = "Visit Gallery";
    ViewBag.pTitle = "Visit Gallery";
    ViewBag.pageTitle = "InfoTrack";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@section styles {
    <!-- jquery.vectormap css -->

    <link href="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.css" rel="stylesheet" type="text/css" />

    <!-- DataTables -->
    <link href="~/libs/datatables.net-bs4/css/dataTables.bootstrap4.min.css" rel="stylesheet" type="text/css" />

    <!-- Responsive datatable examples -->
    <link href="~/libs/datatables.net-responsive-bs4/css/responsive.bootstrap4.min.css" rel="stylesheet" type="text/css" />

}

<style>
    body{
        background-color: #f8f9fa;
    }

    .division-section {
        background-color: #fff;
        padding: 1.5rem;
        border-radius: 1rem;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        margin-bottom: 2rem;
    }

    .branch-card {
        border-radius: 1rem;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        background-color: #fff;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
        position: relative;
    }

        .branch-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .branch-card img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            display: block;
        }

    .branch-card-body {
        padding: 1rem;
    }

        .branch-card-body h5 {
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #495057;
        }

        .branch-card-body p {
            font-size: 0.875rem;
            color: #6c757d;
            margin: 0;
        }

    /* Photo count badge */
    .photo-count-badge {
        position: absolute;
        top: 0.75rem;
        right: 0.75rem;
        background-color: rgba(0, 0, 0, 0.6);
        color: #fff;
        font-size: 0.75rem;
        padding: 0.3rem 0.6rem;
        border-radius: 0.5rem;
        backdrop-filter: blur(5px);
        -webkit-backdrop-filter: blur(5px);
    }

    /* Modal for the all images view */
    #imageModal .modal-content {
        border-radius: 1rem;
    }

    #imageModal .modal-body {
        padding: 1rem;
    }

    #imageModal .image-container {
        border-radius: 1rem;
        overflow: hidden;
        background-color: #f1f1f1;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

        #imageModal .image-container img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            display: block;
        }

    #imageModal .image-caption {
        padding: 0.75rem;
        text-align: center;
    }

        #imageModal .image-caption h6 {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        #imageModal .image-caption p {
            margin: 0;
            font-size: 0.875rem;
            color: #6c757d;
        }

   

</style>
<link href="~/css/planvisit.css" rel="stylesheet" />


<div class="row">
    <h3 class="text-center fw-bold mb-3">Our Image Gallery</h3>
    <p class="text-center text-muted mb-4">Browse images by division and branch.</p>

    <!-- Search bar -->
    <div class="input-group mb-4">
        <span class="input-group-text"><i class="bi bi-search"></i></span>
        <input type="text" id="searchInput" class="form-control" placeholder="Search for a division or branch...">
    </div>

    <div id="galleryContainer">
        <!-- Division and branch sections will be dynamically inserted here -->
    </div>
</div>


<!-- All Images Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-top modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Branch Images</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modalImageGrid" class="row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4">
                    <!-- All images for the branch will be inserted here -->
                </div>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <!-- apexcharts -->
    <script src="~/libs/admin-resources/jquery.vectormap/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="~/libs/admin-resources/jquery.vectormap/maps/jquery-jvectormap-us-merc-en.js"></script>
    <!-- Required datatable js -->
    <script src="~/libs/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/libs/datatables.net-bs4/js/dataTables.bootstrap4.min.js"></script>
    <!-- Buttons examples -->
    <script src="~/libs/datatables.net-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/libs/datatables.net-buttons-bs4/js/buttons.bootstrap4.min.js"></script>
    <script src="~/libs/jszip/jszip.min.js"></script>
    <script src="~/libs/pdfmake/build/pdfmake.min.js"></script>
    <script src="~/libs/pdfmake/build/vfs_fonts.js"></script>
    <script src="~/libs/datatables.net-buttons/js/buttons.html5.min.js"></script>
    <script src="~/libs/datatables.net-buttons/js/buttons.print.min.js"></script>
    <script src="~/libs/datatables.net-buttons/js/buttons.colVis.min.js"></script>
    <script src="~/libs/datatables.net-keytable/js/dataTables.keyTable.min.js"></script>
    <script src="~/libs/datatables.net-select/js/dataTables.select.min.js"></script>
    <!-- Responsive examples -->
    <script src="~/libs/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/libs/datatables.net-responsive-bs4/js/responsive.bootstrap4.min.js"></script>
    <!-- Datatable init js -->
    <script src="~/js/pages/datatables.init.js"></script>
    <script src="~/js/app.js"></script>

}
<script src="~/lib/jquery/dist/jquery.min.js"></script>


<script>  

    document.addEventListener('DOMContentLoaded', () => {
            const galleryContainer = document.getElementById('galleryContainer');
            const searchInput = document.getElementById('searchInput');
            const modalImageGrid = document.getElementById('modalImageGrid');
            const imageModalLabel = document.getElementById('imageModalLabel');
            const imageCarouselInner = document.querySelector('#imageCarousel .carousel-inner');
            const galleryData = {};
            
             fetch('/ManagementApproval/ManagementApproval/GetGalleryData')
                .then(response => response.json())
                .then(data => {
                    
                    data.forEach(division => {
                        galleryData[division.divisionName] = division.branches;
                    });

                    // Initial render
                    renderGalleries('');
                })
                .catch(err => {
                    console.error("Error loading gallery data:", err);
                    galleryContainer.innerHTML = `
                        <div class="text-center text-danger p-5">
                            Failed to load data from server.
                        </div>`;
                });


                const formatDate = (dateStr) => {
                    if (!dateStr) return 'N/A';
                    const date = new Date(dateStr.split('.')[0]); // Remove fractional seconds if any
                    const options = { year: 'numeric', month: 'short', day: 'numeric' };
                    return date.toLocaleDateString('en-US', options); // Example: "Sep 7, 2025"
                };

               // Nameing Format
                const capitalizeFirstLetter = (str) => {
                    if (!str) return '';
                    str = str.toLowerCase(); // convert all letters to lowercase
                    return str.charAt(0).toUpperCase() + str.slice(1);
                };
            

            const renderDivisionSection = (divisionName, branchesToRender) => {
                const divisionSection = document.createElement('div');
                divisionSection.className = 'division-section';
                divisionSection.setAttribute('data-division', divisionName);

                const branchNames = Object.keys(branchesToRender);
                const initialBranches = branchNames.slice(0, 4);
                const hiddenBranches = branchNames.slice(4);

                divisionSection.innerHTML = `
                    <h3 class="fw-bold mb-3">${divisionName}</h3>
                    <div class="row g-4 branch-grid"></div>
                `;
               
                const branchGrid = divisionSection.querySelector('.branch-grid');
               
                initialBranches.forEach(branchName => {
                    const branchImages = branchesToRender[branchName];
                    const photoCount = branchImages.length;
                    if (photoCount > 0) {
                       
                        const latestImage = branchImages[0];
                        const formattedDate =formatDate(latestImage.uploadDate);                                    
                        const formattedBranchName = capitalizeFirstLetter(branchName);
                               
                        const col = document.createElement('div');
                        col.className = 'col-12 col-sm-12 col-md-4 col-lg-3';
                        col.innerHTML = `
                            <div class="branch-card" data-branch-name="${branchName}">
                                <img src="${latestImage.src}" alt="${latestImage.alt}">
                                <span class="photo-count-badge">${photoCount} photo${photoCount > 1 ? 's' : ''}</span>
                                <div class="branch-card-body">
                                    <h5 class="mb-1" style="font-size:15px;">${formattedBranchName}</h5>
                                    <p style="font-size:11px;">Last Uploaded: ${formattedDate}</p>
                                </div>
                            </div>
                        `;
                        branchGrid.appendChild(col);
                    }
                });

                // Add "See More" section if there are more than 4 branches
                if (hiddenBranches.length > 0) {
                    const seeMoreContainer = document.createElement('div');
                    seeMoreContainer.className = 'collapse show-more-container';
                    seeMoreContainer.id = `collapse-${divisionName.replace(/\s/g, '-')}`;

                    const hiddenBranchesGrid = document.createElement('div');
                    hiddenBranchesGrid.className = 'row g-4 mt-3';

                    hiddenBranches.forEach(branchName => {
                        const branchImages = branchesToRender[branchName];
                        const photoCount = branchImages.length;
                        if (photoCount > 0) {
                            const latestImage = branchImages[0];
                            const formattedDate =formatDate(latestImage.uploadDate);
                            const formattedBranchName = capitalizeFirstLetter(branchName);
                            const col = document.createElement('div');
                            col.className = 'col-12 col-sm-12 col-md-4 col-lg-3';
                            col.innerHTML = `
                                <div class="branch-card" data-branch-name="${branchName}">
                                    <img src="${latestImage.src}" alt="${latestImage.alt}">
                                    <span class="photo-count-badge">${photoCount} photo${photoCount > 1 ? 's' : ''}</span>
                                    <div class="branch-card-body">
                                        <h5 class="mb-1" style="font-size:15px;">${formattedBranchName}</h5>
                                        <p style="font-size:11px;">Last Uploaded: ${formattedDate}</p>
                                    </div>
                                </div>
                            `;
                            hiddenBranchesGrid.appendChild(col);
                        }
                    });

                    seeMoreContainer.appendChild(hiddenBranchesGrid);
                    divisionSection.appendChild(seeMoreContainer);

                    const seeMoreBtn = document.createElement('button');
                    seeMoreBtn.className = 'btn btn-outline-primary mt-4';
                    seeMoreBtn.textContent = 'See More Branches';
                    seeMoreBtn.setAttribute('data-bs-toggle', 'collapse');
                    seeMoreBtn.setAttribute('data-bs-target', `#${seeMoreContainer.id}`);
                    seeMoreBtn.setAttribute('aria-expanded', 'false');

                    seeMoreBtn.addEventListener('click', (e) => {
                        e.target.textContent = e.target.textContent.includes('More') ? 'See Less Branches' : 'See More Branches';
                    });

                    divisionSection.appendChild(seeMoreBtn);
                }

                return divisionSection;
            };

            const renderCarousel = (images) => {
                imageCarouselInner.innerHTML = '';
                if (images.length === 0) {
                     imageCarouselInner.innerHTML = `<div class="p-5 text-center text-white-50">No images to display.</div>`;
                     return;
                }
                images.forEach((image, index) => {
                     const uploadDate = formatDate(image.uploadDate);
                      const formattedBranchName = capitalizeFirstLetter(image.branch);
                    const carouselItem = document.createElement('div');
                    carouselItem.className = `carousel-item ${index === 0 ? 'active' : ''}`;
                    carouselItem.innerHTML = `
                        <img src="${image.src}" class="d-block w-100" alt="${image.alt}">
                        <div class="carousel-caption">
                            <h5 class="fw-bold text-white-50" style="font-size:15px">${formattedBranchName}</h5>
                            <p class="text-white-50" style="font-size:11px">last Updated : ${uploadDate}</p>
                        </div>
                    `;
                    imageCarouselInner.appendChild(carouselItem);
                });
            };

         const renderModalContent = (images) => {
                modalImageGrid.innerHTML = '';
                const totalImages = images.length;

                if (totalImages === 0) {
                     modalImageGrid.innerHTML = `<div class="col-12 p-5 text-center text-muted">No images to display.</div>`;
                     imageModalLabel.textContent = "Branch Images";
                     return;
                }

                imageModalLabel.textContent = `Images for ${images[0].branch} (${totalImages} photos)`;

                images.forEach((image, index) => {
                     const uploadDate = formatDate(image.uploadDate);
                      const formattedBranchName = capitalizeFirstLetter(image.branch);
                    const col = document.createElement('div');
                    col.className = 'col';
                    col.innerHTML = `
                        <div class="image-container">
                            <img src="${image.src}" alt="${image.alt}">
                            <div class="image-caption">
                                <h6>${formattedBranchName}</h6>
                                <p class="mb-1 text-primary fw-bold">Image ${index + 1} of ${totalImages}</p>
                                <p>Uploaded: ${uploadDate}</p>
                                <p class="text-secondary">${image.comments}</p>
                            </div>
                        </div>
                    `;
                    modalImageGrid.appendChild(col);
                });
            };





            const renderGalleries = (filterQuery = '') => {
                galleryContainer.innerHTML = '';
                const lowerCaseQuery = filterQuery.toLowerCase();
                let resultsFound = false;

                Object.keys(galleryData).forEach(divisionName => {
                    const branchesInDivision = galleryData[divisionName];
                    const lowerCaseDivisionName = divisionName.toLowerCase();
                    const matchingBranches = {};

                    // Check if division name matches query
                    if (lowerCaseDivisionName.includes(lowerCaseQuery)) {
                        Object.assign(matchingBranches, branchesInDivision);
                    } else {
                        // Check if any branch name within the division matches
                        Object.keys(branchesInDivision).forEach(branchName => {
                            if (branchName.toLowerCase().includes(lowerCaseQuery)) {
                                matchingBranches[branchName] = branchesInDivision[branchName];
                            }
                        });
                    }

                    if (Object.keys(matchingBranches).length > 0) {
                        galleryContainer.appendChild(renderDivisionSection(divisionName, matchingBranches));
                        resultsFound = true;
                    }
                });

                if (!resultsFound) {
                    galleryContainer.innerHTML = `
                        <div class="text-center text-muted p-5">
                            <i class="bi bi-x-circle-fill" style="font-size: 3rem;"></i>
                            <p class="mt-3 fs-5">No results found for "${filterQuery}".</p>
                        </div>
                    `;
                }
            };

            // Event listener for search input
            searchInput.addEventListener('input', (e) => {
                const query = e.target.value.trim();
                renderGalleries(query);
            });


             // Event listener for image clicks
            galleryContainer.addEventListener('click', (e) => {
                const branchCard = e.target.closest('.branch-card');
                if (branchCard) {
                    const branchName = branchCard.getAttribute('data-branch-name');

                    let allImagesInBranch = [];
                    // Find the images for the clicked branch across all divisions
                    Object.values(galleryData).forEach(division => {
                        if (division[branchName]) {
                            // This ensures the number of images shown in the modal is
                            // the same as the number indicated on the branch card.
                            allImagesInBranch = division[branchName];
                        }
                    });

                    renderModalContent(allImagesInBranch);
                    const imageModal = new bootstrap.Modal(document.getElementById('imageModal'));
                    imageModal.show();
                }
            });


            // Event listener for image clicks
            // galleryContainer.addEventListener('click', (e) => {
            //     const branchCard = e.target.closest('.branch-card');
            //     if (branchCard) {
            //         const branchName = branchCard.getAttribute('data-branch-name');

            //         let allImagesInBranch = [];
            //         // Find the images for the clicked branch across all divisions
            //         Object.values(galleryData).forEach(division => {
            //             if (division[branchName]) {
            //                 allImagesInBranch = division[branchName];
            //             }
            //         });

            //         // We only want to show the slider if there's more than one image
            //         if (allImagesInBranch.length > 1) {
            //             renderCarousel(allImagesInBranch);
            //             const imageSliderModal = new bootstrap.Modal(document.getElementById('imageSliderModal'));
            //             imageSliderModal.show();
            //         } else if (allImagesInBranch.length === 1) {
            //             // If there's only one image, show a message instead of the slider
            //             alert("There are no more images to display for this branch.");
            //         }
            //     }
            // });

            // Initial render of the gallery
            renderGalleries('');
    });
</script>